{"version":3,"sources":["Pin.js","CampusMap.js","App.tsx","serviceWorker.js","index.js"],"names":["Pin","position","index","clusterer","key","Map","defaultProps","mapContainerStyle","height","width","children","onLoad","onDragEndFunc","onDragStartFunc","onZoomChangeFunc","CampusMap","listings","lat","lng","testArray","i","length","location","push","id","zoom","center","options","styles","elementType","stylers","visibility","color","featureType","lightness","weight","imagePath","map","App","className","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c3a1aa1b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Marker } from \"@react-google-maps/api\";\n\nconst Pin = ({ position, index, clusterer }) => (\n  <Marker key={index} position={position} clusterer={clusterer} />\n);\n\nexport default Pin;\n","import React from \"react\";\nimport { GoogleMap, MarkerClusterer } from \"@react-google-maps/api\";\nimport Pin from \"./Pin\";\n\nconst CampusMap = () => {\n  const listings = [\n    { lat: -31.56391, lng: 147.154312 },\n    { lat: -33.718234, lng: 150.363181 },\n    { lat: -33.727111, lng: 150.371124 },\n    { lat: -33.848588, lng: 151.209834 },\n    { lat: -33.851702, lng: 151.216968 },\n    { lat: -34.671264, lng: 150.863657 },\n    { lat: -35.304724, lng: 148.662905 },\n    { lat: -36.817685, lng: 175.699196 },\n    { lat: -36.828611, lng: 175.790222 },\n    { lat: -37.75, lng: 145.116667 },\n    { lat: -37.759859, lng: 145.128708 },\n    { lat: -37.765015, lng: 145.133858 },\n    { lat: -37.770104, lng: 145.143299 },\n    { lat: -37.7737, lng: 145.145187 },\n    { lat: -37.774785, lng: 145.137978 },\n    { lat: -37.819616, lng: 144.968119 },\n    { lat: -38.330766, lng: 144.695692 },\n    { lat: -39.927193, lng: 175.053218 },\n    { lat: -41.330162, lng: 174.865694 },\n    { lat: -42.734358, lng: 147.439506 },\n    { lat: -42.734358, lng: 147.501315 },\n    { lat: -42.735258, lng: 147.438 },\n    { lat: -43.999792, lng: 170.463352 },\n  ];\n  let testArray = [];\n  for (let i = 0; i < listings.length; i++) {\n    let location = listings[i];\n    testArray.push(\n      <Pin position={location} id={i} key={i} clusterer={listings} />\n    );\n  }\n\n  const styles = [\n    {\n      elementType: \"labels\",\n      stylers: [\n        {\n          visibility: \"off\",\n        },\n        {\n          color: \"#a592f2\",\n        },\n      ],\n    },\n    {\n      featureType: \"landscape\",\n      stylers: [\n        {\n          color: \"#a592f2\",\n        },\n        {\n          lightness: -7,\n        },\n      ],\n    },\n    {\n      featureType: \"road\",\n      stylers: [\n        {\n          color: \"#e6e6e6\",\n        },\n        {\n          lightness: 43,\n        },\n      ],\n    },\n    {\n      featureType: \"poi.business\",\n      stylers: [\n        {\n          color: \"#a592f2\",\n        },\n        {\n          lightness: -7,\n        },\n      ],\n    },\n    {\n      featureType: \"water\",\n      stylers: [\n        {\n          color: \"#81BEF7\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.local\",\n      elementType: \"geometry.fill\",\n      stylers: [\n        {\n          color: \"#e6e6e6\",\n        },\n        {\n          weight: 1.3,\n        },\n        {\n          visibility: \"on\",\n        },\n        {\n          lightness: 16,\n        },\n      ],\n    },\n    {\n      featureType: \"road\",\n      elementType: \"geometry.fill\",\n      stylers: [\n        {\n          color: \"#e6e6e6\",\n        },\n        {\n          visibility: \"on\",\n        },\n        {\n          lightness: 16,\n        },\n      ],\n    },\n    {\n      featureType: \"poi.park\",\n      stylers: [\n        {\n          color: \"#7FB069\",\n        },\n        {\n          lightness: 32,\n        },\n      ],\n    },\n    {\n      featureType: \"poi.school\",\n      stylers: [\n        {\n          color: \"#C3B6F6\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi.medical\",\n      elementType: \"geometry.fill\",\n      stylers: [\n        {\n          color: \"#a592f2\",\n        },\n        {\n          lightness: -7,\n        },\n      ],\n    },\n    {\n      featureType: \"poi.sports_complex\",\n      stylers: [\n        {\n          color: \"#7FB069\",\n        },\n        {\n          lightness: 32,\n        },\n      ],\n    },\n    {\n      featureType: \"poi.government\",\n      stylers: [\n        {\n          color: \"#a592f2\",\n        },\n        {\n          lightness: -7,\n        },\n      ],\n    },\n    {\n      featureType: \"road.local\",\n      elementType: \"geometry.stroke\",\n      stylers: [\n        {\n          color: \"#e6e6e6\",\n        },\n        {\n          lightness: -10,\n        },\n      ],\n    },\n  ];\n\n  return (\n    <GoogleMap\n      id=\"marker-example\"\n      mapContainerStyle={{\n        height: \"100vh\",\n        width: \"100%\",\n      }}\n      // How zoomed in you want the map to start at (always required)\n      zoom={17}\n      center={{ lat: 42.35898, lng: -71.093489 }}\n      // The latitude and longitude to center the map (always required)\n      options={{ styles: styles }}\n    >\n      <MarkerClusterer\n        options={{\n          imagePath:\n            \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\",\n          styles: [],\n        }}\n      >\n        {/* {listings} */}\n        {(clusterer) =>\n          [\n            { lat: -31.56391, lng: 147.154312 },\n            { lat: -33.718234, lng: 150.363181 },\n            { lat: -33.727111, lng: 150.371124 },\n            { lat: -33.848588, lng: 151.209834 },\n            { lat: -33.851702, lng: 151.216968 },\n            { lat: -34.671264, lng: 150.863657 },\n            { lat: -35.304724, lng: 148.662905 },\n            { lat: -36.817685, lng: 175.699196 },\n            { lat: -36.828611, lng: 175.790222 },\n            { lat: -37.75, lng: 145.116667 },\n            { lat: -37.759859, lng: 145.128708 },\n            { lat: -37.765015, lng: 145.133858 },\n            { lat: -37.770104, lng: 145.143299 },\n            { lat: -37.7737, lng: 145.145187 },\n            { lat: -37.774785, lng: 145.137978 },\n            { lat: -37.819616, lng: 144.968119 },\n            { lat: -38.330766, lng: 144.695692 },\n            { lat: -39.927193, lng: 175.053218 },\n            { lat: -41.330162, lng: 174.865694 },\n            { lat: -42.734358, lng: 147.439506 },\n            { lat: -42.734358, lng: 147.501315 },\n            { lat: -42.735258, lng: 147.438 },\n            { lat: -43.999792, lng: 170.463352 },\n          ].map((location, i) => (\n            <Pin key={i} position={location} clusterer={clusterer} />\n          ))\n        }\n      </MarkerClusterer>\n    </GoogleMap>\n  );\n};\n\nMap.defaultProps = {\n  mapContainerStyle: {\n    height: \"400px\",\n    width: \"800px\",\n  },\n  children: null,\n  onLoad: () => {},\n  onDragEndFunc: () => {},\n  onDragStartFunc: () => {},\n  onZoomChangeFunc: () => {},\n};\n\nexport default CampusMap;\n","import React from \"react\";\nimport CampusMap from \"./CampusMap\";\nimport Memory from \"./Memory\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        <h1>\n          Camp<span>US</span>\n        </h1>\n        <p>Stay connected with your alma mater</p>\n      </div>\n\n      <div className=\"container\">\n        <div id=\"map\">\n          <CampusMap />\n        </div>\n        <div id=\"memories\">\n          <h2>View memories here</h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}